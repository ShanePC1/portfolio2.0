<!-- views/grid.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Photo Grid</title>
    <link rel="stylesheet" href="/styles/navStyles.css">
    <link rel="stylesheet" href="/styles/gridStyles.css">
</head>

<body>
    <header>
        <%- include('./partials/header'); %>
    </header>
    <div class="image-container">
        <% aiCon.forEach((photo, index) => { %>
        <div class="image-wrapper" onclick="showModal('<%= photo.imageUrl %>', '<%= photo.description %>','<%= index %>')">
            <img src="<%= photo.imageUrl %>" alt="<%= photo.description %>">
        </div>
        <% }); %>
    </div>
    <!-- Modal -->
    <div id="myModal" class="modal">
          <span style="padding: 5vw" class="prev" onclick="changeImage(-1)">&#10094;</span>
        <div class="modal-content" id="modalContent" onclick="closeModal()">
          
            <span style="padding: 5vw" class="close" onclick="closeModal()">&times;</span>
            <img id="modalImage" src="" alt="Photo">
            <p id="modalDescription"></p>
            
        </div>
        <span class="next" onclick="changeImage(1)">&#10095;</span>
    </div>
    <!-- ... -->
    <script>
        const photos = <%- JSON.stringify(aiCon) %>;
    let currentIndex ;

    function showModal(imageUrl, description,index) {
        const modal = document.getElementById('myModal');
        const modalContent = document.getElementById('modalContent');
        const modalImage = document.getElementById('modalImage');
        const modalDescription = document.getElementById('modalDescription');
               
  
        currentIndex = index;
      
        // Create a new image element to load the image
        const tempImage = new Image();

        tempImage.onload = function() {
            // Once the image is loaded, set its source
            modalImage.src = imageUrl;

            // Set the description
            modalDescription.innerHTML = description;

            // Display the modal
            modal.style.display = 'flex';

            // Calculate the aspect ratio and set the height after displaying
            const aspectRatio = tempImage.width / tempImage.height;
            const newHeight = modalContent.offsetWidth / aspectRatio;

            // Set the height of the modal content
            modalContent.style.height = `${newHeight}px`;

            // Clean up the temporary image
            tempImage.onload = null;
        };

        tempImage.src = imageUrl;
    }

    function closeModal() {
        const modal = document.getElementById('myModal');
        const modalContent = document.getElementById('modalContent');

        // Reset the height when closing
        modalContent.style.height = 'auto';

        modal.style.display = 'none';
    }
    function changeImage(offset) {
          console.log('currentIndex in changeImage'+currentIndex);
            currentIndex = parseInt(currentIndex)+parseInt(offset);
            console.log(offset);
  console.log(currentIndex);
            // Ensure the index stays within bounds
            if (currentIndex < 0) {
                currentIndex = photos.length - 1;
            } else if (currentIndex >= photos.length) {
                currentIndex = 0;
            }

            // Load and display the new image
            const newImageUrl = photos[currentIndex].imageUrl;
            const newDescription = photos[currentIndex].description;
            showModal(newImageUrl, newDescription, currentIndex);
        }
    </script>
    <!-- ... -->
</body>

</html>